package vista;

import conexion.Conexion;
import controlador.ControladorProducto;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.sql.*;
import javax.swing.JOptionPane;
import modelo.Producto;

public class InterProducto extends javax.swing.JInternalFrame {

    int obtenerIdCategoriaCombo = 0;

    public InterProducto() {
        initComponents();
        this.setSize(new Dimension(400, 350));
        this.setTitle("Nuevo Ptoducto");
        this.cargarComboCategorias();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        txt_descripcion = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        txt_cantidad = new javax.swing.JTextField();
        jComboBox_iva = new javax.swing.JComboBox<>();
        jComboBox_categoria = new javax.swing.JComboBox<>();
        btn_guardar = new javax.swing.JButton();
        jLabel_wallpaper = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nuevo producto ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Precio: ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nombre: ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Categorias:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 200, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Cantidad:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Descripcion:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 140, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("IVA:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, -1, -1));
        getContentPane().add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 170, -1));
        getContentPane().add(txt_descripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 140, 170, -1));
        getContentPane().add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 170, -1));
        getContentPane().add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 80, 170, -1));

        jComboBox_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione iva:", "No grava iva", "12%", "14%" }));
        getContentPane().add(jComboBox_iva, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 170, -1));

        jComboBox_categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione categoria:", "1", "2", "3" }));
        getContentPane().add(jComboBox_categoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 200, 170, -1));

        btn_guardar.setBackground(new java.awt.Color(0, 204, 204));
        btn_guardar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(btn_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 250, 90, 30));

        jLabel_wallpaper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo3.jpg"))); // NOI18N
        getContentPane().add(jLabel_wallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 320));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed

        //instanciamos
        Producto producto = new Producto();
        ControladorProducto controladorProducto = new ControladorProducto();

        //variables seleccionables (combo box)
        String iva = "";
        String categoria = "";

        //asignamos
        iva = jComboBox_iva.getSelectedItem().toString().trim();
        categoria = jComboBox_categoria.getSelectedItem().toString().trim();

        //validar campos
        if (txt_nombre.getText().equals("") || txt_cantidad.getText().equals("")
                || txt_precio.getText().equals("") || txt_descripcion.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "Complete todos los campos");
            txt_nombre.setBackground(Color.red);
            txt_cantidad.setBackground(Color.red);
            txt_precio.setBackground(Color.red);
            txt_descripcion.setBackground(Color.red);

        } else {
            //consulta para ver si el producto ya esta existe

            //este ! es solo para mandar el false al else
            if (!controladorProducto.existeProducto(txt_nombre.getText().trim())) {

                //si iva es igual a este texto
                if (iva.equalsIgnoreCase("Seleccione iva:")) {

                    JOptionPane.showMessageDialog(null, "Seleccione iva");

                } else {

                    if (categoria.equalsIgnoreCase("Seleccione categoria:")) {

                        JOptionPane.showMessageDialog(null, "Seleccione categoria");
                    } else {

                        try {
                            producto.setNombre(txt_nombre.getText().trim());
                            producto.setCantidad(Integer.parseInt(txt_cantidad.getText().trim()));

                            String precioTxt = "";
                            double precio = 0.0;

                            precioTxt = txt_precio.getText().trim();
                            boolean aux = false;

                            //si el usuario ingresa ,(coma ) como punto decimal,
                            //lo transformamos a punto
                            for (int i = 0; i < precioTxt.length(); i++) {
                                if (precioTxt.charAt(i) == ',') {

                                    String precioNuevo = precioTxt.replace(",", ".");
                                    precio = Double.parseDouble(precioNuevo);
                                    aux = true;
                                }

                            }
                            //evaluar la condicion
                            if (aux) {
                                producto.setPrecio(precio);
                            } else {
                                precio = Double.parseDouble(precioTxt);
                                producto.setPrecio(precio);

                            }

                            producto.setDescripcion(txt_descripcion.getText().trim());

                            //porcentaje de iva
                            if (iva.equalsIgnoreCase("No grava iva")) {
                                producto.setPorcentajeIva(0);
                            } else if (iva.equalsIgnoreCase("12%")) {
                                producto.setPorcentajeIva(12);
                            } else if (iva.equalsIgnoreCase("14")) {
                                producto.setPorcentajeIva(14);
                            }

                            //enviar el id de la categoria - cargar un metodo que obtiene el 
                            //id de la categoria
                            //esto es para que nos cargue esa variable que estamos pasando
                            this.idCategoria();
                            producto.setIdCategoria(obtenerIdCategoriaCombo);

                            producto.setEstado(1);

                            if (controladorProducto.guardar(producto)) {

                                JOptionPane.showMessageDialog(null, "Registro guardado");
                                txt_nombre.setBackground(Color.GREEN);
                                txt_cantidad.setBackground(Color.GREEN);
                                txt_precio.setBackground(Color.GREEN);
                                txt_descripcion.setBackground(Color.GREEN);

                                this.cargarComboCategorias();//para que se quede como antes
                                this.jComboBox_iva.setSelectedItem("Seleccione iva:");//al inicio
                                this.limpiar();

                            } else {
                                JOptionPane.showMessageDialog(null, "Error al guardar");
                            }

                        } catch (HeadlessException | NumberFormatException e) {
                            System.out.println("error en  = " + e);

                        }
                    }

                }

            } else {

                JOptionPane.showMessageDialog(null, "El producto ya existe en la base de datos");

            }

        }


    }//GEN-LAST:event_btn_guardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guardar;
    private javax.swing.JComboBox<String> jComboBox_categoria;
    private javax.swing.JComboBox<String> jComboBox_iva;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel_wallpaper;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

    //tengo que cargar en el combo box las categorias 
    //1.-metodo para cragar las categorias
    private void cargarComboCategorias() {

        Connection con = Conexion.conectar();
        String sql = "select * from tb_categoria";
        Statement st;

        try {

            st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox_categoria.removeAllItems();
            jComboBox_categoria.addItem("seleccione categoria:");
            while (rs.next()) {

                //osea estamos agregando todas las descripciones de la tabla categoria 
                jComboBox_categoria.addItem(rs.getString("descripcion"));

            }

            con.close();

        } catch (SQLException e) {
            System.out.println("error al cargar categorias = " + e);

        }

    }

    //2.-Metodo para obtner el id de la categoria
    private int idCategoria() {

        String sql = "select * from tb_categoria  where descripcion ='" + this.jComboBox_categoria.getSelectedItem() + "'";

        Statement st;

        try {

            Connection con = Conexion.conectar();
            st = con.createStatement();

            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {

                obtenerIdCategoriaCombo = rs.getInt("idCategorias");

            }

        } catch (SQLException e) {

            System.out.println("Error al obtener el id de la categoria: " + e);
        }

        return obtenerIdCategoriaCombo;

    }

    //metodo para limpiar los campos de los txt
    private void limpiar() {
        txt_nombre.setText("");
        txt_cantidad.setText("");
        txt_precio.setText("");
        txt_descripcion.setText("");

    }

}
